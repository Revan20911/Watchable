{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MoviesService {\n  constructor(http) {\n    this.http = http;\n  }\n  getMovieTitle(search_query) {\n    let url = '/api/search/' + search_query;\n    return this.http.get(url);\n  }\n  getMovieInfo(title_id) {\n    const key = 'kFIB7Z9UjMLeRhJ5DdiUxr8Z1PoUFh9xvsrE2dYr';\n    let url = 'https://api.watchmode.com/v1/title/' + title_id + '/sources/?apiKey=' + key;\n    return this.http.get(url);\n  }\n  getAPIStatus() {\n    return this.http.get(\"/api/status\", {\n      responseType: 'text'\n    });\n  }\n}\nMoviesService.ɵfac = function MoviesService_Factory(t) {\n  return new (t || MoviesService)(i0.ɵɵinject(i1.HttpClient));\n};\nMoviesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MoviesService,\n  factory: MoviesService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAWA,OAAM,MAAOA,aAAa;EAExBC,YAAoBC,IAAe;IAAf,SAAI,GAAJA,IAAI;EAAe;EAGvCC,aAAa,CAACC,YAAoB;IAG9B,IAAIC,GAAG,GAAG,cAAc,GAAGD,YAAY;IAC3C,OAAO,IAAI,CAACF,IAAI,CAACI,GAAG,CAACD,GAAG,CAAC;EAEzB;EAGAE,YAAY,CACVC,QAAgB;IAGd,MAAMC,GAAG,GAAG,0CAA0C;IACtD,IAAIJ,GAAG,GAAG,qCAAqC,GAAEG,QAAQ,GAAG,mBAAmB,GAAGC,GAAG;IAEvF,OAAO,IAAI,CAACP,IAAI,CAACI,GAAG,CAASD,GAAG,CAAC;EAEjC;EAGAK,YAAY;IACV,OAAO,IAAI,CAACR,IAAI,CAACI,GAAG,CAAC,aAAa,EAAE;MAACK,YAAY,EAAE;IAAM,CAAC,CAAC;EAC7D;;AA5BSX,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAY,SAAbZ,aAAa;EAAAa,YAFZ;AAAM","names":["MoviesService","constructor","http","getMovieTitle","search_query","url","get","getMovieInfo","title_id","key","getAPIStatus","responseType","factory","providedIn"],"sourceRoot":"","sources":["/home/chrismerrill/Desktop/Repositories/Watchable/src/app/movies.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders, HttpParams, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, map } from 'rxjs';\n\nimport { Result, resultList, Details, DetailsArray, sourceList, Source } from './movie-list/interfaces';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MoviesService {\n\n  constructor(private http:HttpClient) { }\n\n\n  getMovieTitle(search_query: string, \n    ){\n\n      let url = '/api/search/' + search_query;\n  return this.http.get(url)\n\n  }\n\n\n  getMovieInfo(\n    title_id: number, \n    ): Observable<Source>{\n\n      const key = 'kFIB7Z9UjMLeRhJ5DdiUxr8Z1PoUFh9xvsrE2dYr';\n      let url = 'https://api.watchmode.com/v1/title/'+ title_id + '/sources/?apiKey=' + key;\n\n    return this.http.get<Source>(url);\n\n    }\n\n\n    getAPIStatus(){\n      return this.http.get(\"/api/status\", {responseType: 'text'});\n    }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}